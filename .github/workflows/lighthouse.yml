name: 'Lighthouse'
on:
  pull_request:
    branches:
      - main

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    outputs:
      results: ${{ steps.lighthouse-ci.outputs.results }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: 'Install Node'
      uses: actions/setup-node@v4
      with:
        node-version: 20.11
        cache: 'yarn'
        cache-dependency-path: 'yarn.lock'
    - name: 'Install Dependencies'
      run: |
        yarn
    - name: 'Run Lighthouse CI'
      id: lighthouse-ci
      run: |
        yarn global add @lhci/cli@0.13.0
        lhci autorun
        echo "results=| Metric | Target score | Actual score | Passed |" >> "$GITHUB_OUTPUT"
        echo "results=|--------|--------------|--------------|--------|" >> "$GITHUB_OUTPUT"
        echo "results=| Performance | $(jq -r '.[] | select(.auditProperty=="performance").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditProperty=="performance").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditProperty=="performance").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
        echo "results=| - LCP | $(jq -r '.[] | select(.auditId=="largest-contentful-paint").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditId=="largest-contentful-paint").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditId=="largest-contentful-paint").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
        echo "results=| - FID | $(jq -r '.[] | select(.auditId=="max-potential-fid").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditId=="max-potential-fid").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditId=="max-potential-fid").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
        echo "results=| - CLS | $(jq -r '.[] | select(.auditId=="cumulative-layout-shift").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditId=="cumulative-layout-shift").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditId=="cumulative-layout-shift").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
        echo "results=| Accessibility | $(jq -r '.[] | select(.auditProperty=="accessibility").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditProperty=="accessibility").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditProperty=="accessibility").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
        echo "results=| Best Practicies | $(jq -r '.[] | select(.auditProperty=="best-practices").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditProperty=="best-practices").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditProperty=="best-practices").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
        echo "results=| SEO | $(jq -r '.[] | select(.auditProperty=="seo").expected' .lighthouseci/assertion-results.json) | $(jq -r '.[] | select(.auditProperty=="seo").actual' .lighthouseci/assertion-results.json) | $([ $(jq -r '.[] | select(.auditProperty=="seo").passed' .lighthouseci/assertion-results.json) ] && echo "游릴" || echo "游린") |" >> "$GITHUB_OUTPUT"
    - name: 'Lighthouse Report'
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          Lighthouse Report
          ${{ steps.lighthouse-ci.outputs.results }}
